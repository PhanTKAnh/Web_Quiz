{"ast":null,"code":"var _jsxFileName = \"D:\\\\font-endt2\\\\Project-mini-5\\\\project-5\\\\src\\\\pages\\\\Question\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./question.scss\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Question() {\n  _s();\n  // Local state to store the questions\n  const [questions, setQuestions] = useState([]);\n\n  // Get the selected topic from the Redux store (replace with your correct state structure)\n  const selectedTopicId = useSelector(state => state.questionReducer);\n  useEffect(() => {\n    // Assuming selectedTopicId is a promise, resolve it\n    const fetchQuestions = async () => {\n      const resolvedQuestions = await selectedTopicId;\n      setQuestions(resolvedQuestions); // Store the resolved data in local state\n    };\n    fetchQuestions();\n  }, [selectedTopicId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"B\\xE0i Quiz ch\\u1EE7 \\u0111\\u1EC1: HTML5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }, this), questions.length > 0 ? questions.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [item.id, \".\", item.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"answer\",\n          children: item.answer.map((ans, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"answer\",\n              type: \"radio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 30\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: ans\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 26\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No questions available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n}\n_s(Question, \"dcM88wFjL3sZwj6SGTC+jxY3JeU=\", false, function () {\n  return [useSelector];\n});\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["useEffect","useState","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","Question","_s","questions","setQuestions","selectedTopicId","state","questionReducer","fetchQuestions","resolvedQuestions","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","id","question","className","answer","ans","index","type","_c","$RefreshReg$"],"sources":["D:/font-endt2/Project-mini-5/project-5/src/pages/Question/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./question.scss\"\r\n\r\nfunction Question() {\r\n    // Local state to store the questions\r\n    const [questions, setQuestions] = useState([]);\r\n    \r\n    // Get the selected topic from the Redux store (replace with your correct state structure)\r\n    const selectedTopicId = useSelector(state => state.questionReducer);\r\n\r\n    useEffect(() => {\r\n        // Assuming selectedTopicId is a promise, resolve it\r\n        const fetchQuestions = async () => {\r\n            const resolvedQuestions = await selectedTopicId;\r\n            setQuestions(resolvedQuestions); // Store the resolved data in local state\r\n        };\r\n        \r\n        fetchQuestions();\r\n    }, [selectedTopicId]);\r\n\r\n    return (\r\n        <>\r\n           <form>\r\n           <h2>Bài Quiz chủ đề: HTML5</h2>\r\n            {questions.length > 0 ? (\r\n                questions.map(item => (\r\n                    <div key={item.id}>\r\n                        <h4>{item.id}.{item.question}</h4>\r\n                         <div className=\"answer\" >\r\n                             \r\n                           {item.answer.map((ans, index) => (\r\n                            <>\r\n                             <input className=\"answer\"  type=\"radio\" />\r\n                             <label key={index}>{ans}</label>\r\n                            </>\r\n                            ))}\r\n                            \r\n                         </div>\r\n                        \r\n                    </div>\r\n                ))\r\n            ) : (\r\n                <p>No questions available</p>\r\n            )}\r\n           </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Question;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExB,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMU,eAAe,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,eAAe,CAAC;EAEnEb,SAAS,CAAC,MAAM;IACZ;IACA,MAAMc,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,iBAAiB,GAAG,MAAMJ,eAAe;MAC/CD,YAAY,CAACK,iBAAiB,CAAC,CAAC,CAAC;IACrC,CAAC;IAEDD,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACH,eAAe,CAAC,CAAC;EAErB,oBACIP,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACGZ,OAAA;MAAAY,QAAA,gBACAZ,OAAA;QAAAY,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7BX,SAAS,CAACY,MAAM,GAAG,CAAC,GACjBZ,SAAS,CAACa,GAAG,CAACC,IAAI,iBACdnB,OAAA;QAAAY,QAAA,gBACIZ,OAAA;UAAAY,QAAA,GAAKO,IAAI,CAACC,EAAE,EAAC,GAAC,EAACD,IAAI,CAACE,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjChB,OAAA;UAAKsB,SAAS,EAAC,QAAQ;UAAAV,QAAA,EAEpBO,IAAI,CAACI,MAAM,CAACL,GAAG,CAAC,CAACM,GAAG,EAAEC,KAAK,kBAC3BzB,OAAA,CAAAE,SAAA;YAAAU,QAAA,gBACCZ,OAAA;cAAOsB,SAAS,EAAC,QAAQ;cAAEI,IAAI,EAAC;YAAO;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC1ChB,OAAA;cAAAY,QAAA,EAAoBY;YAAG,GAAXC,KAAK;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAc,CAAC;UAAA,eAC/B,CACD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEA,CAAC;MAAA,GAXDG,IAAI,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaZ,CACR,CAAC,gBAEFhB,OAAA;QAAAY,QAAA,EAAG;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC/B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC,gBACR,CAAC;AAEX;AAACZ,EAAA,CA5CQD,QAAQ;EAAA,QAKWL,WAAW;AAAA;AAAA6B,EAAA,GAL9BxB,QAAQ;AA8CjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
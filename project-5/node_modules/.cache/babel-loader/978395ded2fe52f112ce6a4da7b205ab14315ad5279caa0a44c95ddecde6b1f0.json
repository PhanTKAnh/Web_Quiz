{"ast":null,"code":"var _jsxFileName = \"D:\\\\font-endt2\\\\Project-mini-5\\\\project-5\\\\src\\\\pages\\\\Question\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Question() {\n  _s();\n  // Get the selected topic from the Redux store\n  const selectedTopicId = useSelector(state => state.todo.selectedId); // Adjust state selector based on your reducer structure\n\n  console.log(\"Selected Topic ID:\", selectedTopicId);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Question Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Topic ID: \", selectedTopicId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Question, \"ZI0cooOGSQ0Qm2D2Cljp7JzjNp4=\", false, function () {\n  return [useSelector];\n});\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","Question","_s","selectedTopicId","state","todo","selectedId","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/font-endt2/Project-mini-5/project-5/src/pages/Question/index.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\n\r\nfunction Question() {\r\n    // Get the selected topic from the Redux store\r\n    const selectedTopicId = useSelector(state => state.todo.selectedId); // Adjust state selector based on your reducer structure\r\n\r\n    console.log(\"Selected Topic ID:\", selectedTopicId);\r\n\r\n    return (\r\n        <>\r\n            <h2>Question Page</h2>\r\n            <p>Topic ID: {selectedTopicId}</p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Question;\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB;EACA,MAAMC,eAAe,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC;;EAErEC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEL,eAAe,CAAC;EAElD,oBACIL,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBf,OAAA;MAAAW,QAAA,GAAG,YAAU,EAACN,eAAe;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eACpC,CAAC;AAEX;AAACX,EAAA,CAZQD,QAAQ;EAAA,QAEWL,WAAW;AAAA;AAAAkB,EAAA,GAF9Bb,QAAQ;AAcjB,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createRegister, LoginAPI } from \"../services/LoginServices\";\nimport Swal from \"sweetalert2\"; // Import SweetAlert2\nimport { useLocation, useNavigate } from \"react-router-dom\";\nconst Users = async (state = [], action) => {\n  _s();\n  console.log(state, action);\n  const navigate = useNavigate();\n  switch (action.type) {\n    case \"CREATE_REGISTER\":\n      const result = await createRegister(action.info);\n    case \"LOGIN_SUCCESS\":\n      Swal.fire({\n        title: \"Login Successful!\",\n        text: \"Welcome back!\",\n        icon: \"success\",\n        confirmButtonText: \"OK\"\n      });\n      // You might handle redirection in the component here\n      return state;\n    case \"LOGIN_FAILURE\":\n      Swal.fire({\n        title: \"Login Failed!\",\n        text: \"Invalid email or password.\",\n        icon: \"error\",\n        confirmButtonText: \"OK\"\n      });\n      return state;\n    default:\n      return state;\n  }\n};\n_s(Users, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["createRegister","LoginAPI","Swal","useLocation","useNavigate","Users","state","action","_s","console","log","navigate","type","result","info","fire","title","text","icon","confirmButtonText","_c","$RefreshReg$"],"sources":["D:/font-endt2/Project-mini-5/project-5/src/reducer/users.js"],"sourcesContent":["import { createRegister, LoginAPI } from \"../services/LoginServices\";\r\nimport Swal from \"sweetalert2\"; // Import SweetAlert2\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nconst Users = async (state = [], action) => {\r\n    console.log(state, action);\r\n    const navigate = useNavigate();\r\n        switch (action.type) {\r\n        case \"CREATE_REGISTER\":\r\n            const result = await createRegister(action.info);\r\n            case \"LOGIN_SUCCESS\":\r\n                Swal.fire({\r\n                    title: \"Login Successful!\",\r\n                    text: \"Welcome back!\",\r\n                    icon: \"success\",\r\n                    confirmButtonText: \"OK\"\r\n                });\r\n                // You might handle redirection in the component here\r\n                return state;\r\n            case \"LOGIN_FAILURE\":\r\n                Swal.fire({\r\n                    title: \"Login Failed!\",\r\n                    text: \"Invalid email or password.\",\r\n                    icon: \"error\",\r\n                    confirmButtonText: \"OK\"\r\n                });\r\n                return state;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport default Users;"],"mappings":";AAAA,SAASA,cAAc,EAAEC,QAAQ,QAAQ,2BAA2B;AACpE,OAAOC,IAAI,MAAM,aAAa,CAAC,CAAC;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAK,GAAG,EAAE,EAAEC,MAAM,KAAK;EAAAC,EAAA;EACxCC,OAAO,CAACC,GAAG,CAACJ,KAAK,EAAEC,MAAM,CAAC;EAC1B,MAAMI,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC1B,QAAQG,MAAM,CAACK,IAAI;IACnB,KAAK,iBAAiB;MAClB,MAAMC,MAAM,GAAG,MAAMb,cAAc,CAACO,MAAM,CAACO,IAAI,CAAC;IAChD,KAAK,eAAe;MAChBZ,IAAI,CAACa,IAAI,CAAC;QACNC,KAAK,EAAE,mBAAmB;QAC1BC,IAAI,EAAE,eAAe;QACrBC,IAAI,EAAE,SAAS;QACfC,iBAAiB,EAAE;MACvB,CAAC,CAAC;MACF;MACA,OAAOb,KAAK;IAChB,KAAK,eAAe;MAChBJ,IAAI,CAACa,IAAI,CAAC;QACNC,KAAK,EAAE,eAAe;QACtBC,IAAI,EAAE,4BAA4B;QAClCC,IAAI,EAAE,OAAO;QACbC,iBAAiB,EAAE;MACvB,CAAC,CAAC;MACF,OAAOb,KAAK;IACpB;MACI,OAAOA,KAAK;EACpB;AAEJ,CAAC;AAAAE,EAAA,CA3BKH,KAAK;EAAA,QAEUD,WAAW;AAAA;AAAAgB,EAAA,GAF1Bf,KAAK;AA4BX,eAAeA,KAAK;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}